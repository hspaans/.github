---
name: Ansible Role CI

on:
  workflow_call:

env:
  MOLECULE_VERSION: 'molecule==24.12.0'

jobs:

  molecule:
    name: Molecule
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
        ansible-version:
          - 'ansible>=10.0.0,<11.0.0'
          - 'ansible>=11.0.0,<12.0.0'
        exclude:
          - ansible-version: 'ansible>=11.0.0,<12.0.0'
            python-version: '3.10'
        include:
          - ansible-version: 'ansible>=10.0.0,<11.0.0'
            python-version: '3.10'
          - ansible-version: 'ansible>=10.0.0,<11.0.0'
            python-version: '3.11'
          - ansible-version: 'ansible>=10.0.0,<11.0.0'
            python-version: '3.12'
          - ansible-version: 'ansible>=11.0.0,<12.0.0'
            python-version: '3.11'
          - ansible-version: 'ansible>=11.0.0,<12.0.0'
            python-version: '3.12'

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v5

      - name: Cache Ansible Roles
        id: cache-ansible-roles
        uses: actions/cache@v4
        with:
          path: ~/.ansible
          key: ${{ runner.os }}-${{ matrix.python-version }}-ansible-roles

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "${{ matrix.ansible-version }}" ansible-lint ${{ env.MOLECULE_VERSION }} molecule-plugins[docker] docker flake8 flake8-bugbear flake8-docstrings flake8-import-order flake8-pylint flake8-github-annotations pytest pytest-testinfra pymarkdownlnt yamllint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with yamllint
        run: |
          yamllint . --format github

      - name: Lint with pymarkdownlint
        run: |
          pymarkdownlnt scan `git ls-files '*.md' ':!:*TEMPLATE/*md'`

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --format=github
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --format=github

      - name: Test with Molecule
        run: molecule test --all
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"

  analyze:
    needs:
      - molecule
    name: CodeQL Analyze
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language:
          - 'python'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
